version: '3.4'

services:
  agent:
    image: "gcr.io/datadoghq/agent:7.36.1"
    labels:
      squad: customer
      tribe: sre
    container_name: agent
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_TAGS=env:workshop source:docker project:workshop role:application
      - DD_LOG_LEVEL=WARN
      - DD_DOCKER_LABELS_AS_TAGS={"squad":"squad"}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    ports:
      - "8126:8126"
      - "8125:8125"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/run/datadog:/var/run/datadog

  todoapi:
    #image: willianvalerio/dd-dotnet-todolist
    build: TodoApi/
    depends_on:
      - agent
    container_name: todoapi
    ports:
      - 5001:80
      - 9090:9090
    labels:
      com.datadoghq.ad.logs: >-
        [{
          "source": "csharp", 
          "service": "todoapi",
          "log_processing_rules": [{
            "type": "multi_line",
            "name": "log_start_with_date",
            "pattern" : "\\d{4}-\\d{2}-\\d{2}"
          }]
        }]
      squad: 'customer'
      tribe: 'onboarding'
      com.datadoghq.tags.service: 'todoapi'
      com.datadoghq.tags.env: 'workshop'
      com.datadoghq.tags.version: '2.0'
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: >-
        [{
          "prometheus_url": "http://%%host%%:9090/metrics",
          "namespace": "todoapi",
          "metrics": ["*"]
        }]    
    environment:
      - DD_LOGS_INJECTION=true
      - DD_AGENT_HOST=agent
      - DD_RUNTIME_METRICS_ENABLED=true
      - DD_SERVICE=todoapi
      - DD_VERSION=1.0
    volumes:
      - /var/run/datadog:/var/run/datadog:ro